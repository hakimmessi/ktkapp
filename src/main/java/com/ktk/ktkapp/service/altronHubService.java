package com.ktk.ktkapp.service;

import com.ktk.ktkapp.dto.technician.responses.altronHubResponse;
import com.ktk.ktkapp.dto.technician.altronHub;
import com.ktk.ktkapp.model.technician.altronHubModel;
import com.ktk.ktkapp.repos.technician.altronHubRepo;
import jakarta.persistence.EntityNotFoundException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

@Service
public class altronHubService {

    @Autowired
    private altronHubRepo altronHubRepo;

    public altronHubResponse createAltronHub(altronHub hubDto) {
        altronHubModel model = toModel(hubDto);
        altronHubModel savedModel = altronHubRepo.save(model);
        return toResponseDto(savedModel);
    }

    public List<altronHubResponse> getAllAltronHubs() {
        return altronHubRepo.findAll().stream()
                .map(this::toResponseDto)
                .collect(Collectors.toList());
    }

    public Optional<altronHubResponse> getAltronHubById(Integer id) {
        return altronHubRepo.findById(id).map(this::toResponseDto);
    }

    public altronHubResponse updateAltronHub(Integer id, altronHub hubDetails) {
        altronHubModel existingHub = altronHubRepo.findById(id)
                .orElseThrow(() -> new EntityNotFoundException("Altron Hub not found with id: " + id));

        existingHub.setHubName(hubDetails.getHubName());
        existingHub.setAddress(hubDetails.getAddress());
        existingHub.setCity(hubDetails.getCity());
        existingHub.setProvince(hubDetails.getProvince());
        existingHub.setGpsCoordinates(hubDetails.getGpsCoordinates());
        existingHub.setContactName(hubDetails.getContactName());
        existingHub.setContactEmail(hubDetails.getContactEmail());
        existingHub.setContactPhone(hubDetails.getContactPhone());

        altronHubModel updatedHub = altronHubRepo.save(existingHub);
        return toResponseDto(updatedHub);
    }

    public void deleteAltronHub(Integer id) {
        if (!altronHubRepo.existsById(id)) {
            throw new EntityNotFoundException("Altron Hub not found with id: " + id);
        }
        altronHubRepo.deleteById(id);
    }

    private altronHubResponse toResponseDto(altronHubModel model) {
        return new altronHubResponse(
                model.getHubId(),
                model.getHubName(),
                model.getAddress(),
                model.getCity(),
                model.getProvince(),
                model.getGpsCoordinates(),
                model.getContactName(),
                model.getContactEmail(),
                model.getContactPhone(),
                model.getCreatedAt(),
                model.getUpdatedAt()
        );
    }

    private altronHubModel toModel(altronHub dto) {
        altronHubModel model = new altronHubModel();
        // Note: We ignore the ID and timestamps from the DTO.
        // ID is generated by the DB, and timestamps are handled by @CreationTimestamp/@UpdateTimestamp.
        model.setHubName(dto.getHubName());
        model.setAddress(dto.getAddress());
        model.setCity(dto.getCity());
        model.setProvince(dto.getProvince());
        model.setGpsCoordinates(dto.getGpsCoordinates());
        model.setContactName(dto.getContactName());
        model.setContactEmail(dto.getContactEmail());
        model.setContactPhone(dto.getContactPhone());
        return model;
    }
}